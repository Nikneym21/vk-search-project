#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import tkinter as tk
from tkinter import ttk, messagebox
from datetime import datetime
from src.gui.vk_parser_interface import VKParserInterface
from src.gui.link_comparator_interface import LinkComparatorInterface
from src.gui.database_interface import DatabaseInterface

class MainInterface:
    """–ì–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    def __init__(self, root):
        self.root = root
        self.root.title("–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫ –∏ –ü–∞—Ä—Å–µ—Ä –í–ö - –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
        self.root.geometry("1400x900")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã —á–µ—Ä–µ–∑ PluginManager
        self.init_plugins()
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.setup_ui()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
        self.load_window_settings()
        
        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        self.bind_events()
    
    def init_plugins(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ PluginManager"""
        try:
            from src.core.plugin_manager import PluginManager
            
            # –°–æ–∑–¥–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π PluginManager
            self.plugin_manager = PluginManager()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–ª–∞–≥–∏–Ω—ã
            self.plugin_manager.load_plugins()
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã (–≤–∫–ª—é—á–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
            self.plugin_manager.initialize_plugins()
            
            # –ü–æ–ª—É—á–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã
            self.database_plugin = self.plugin_manager.get_plugin('database')
            self.filter_plugin = self.plugin_manager.get_plugin('filter')
            self.vk_search_plugin = self.plugin_manager.get_plugin('vk_search')
            self.token_manager = self.plugin_manager.get_plugin('token_manager')
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤
            plugin_status = self.plugin_manager.get_plugin_status()
            print("üìä –°—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤:")
            for plugin_name, status in plugin_status.items():
                print(f"   {plugin_name}: {status}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
            dependencies = self.plugin_manager.validate_plugin_dependencies()
            print("üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
            for plugin_name, deps in dependencies.items():
                for dep in deps:
                    print(f"   {plugin_name}: {dep}")
            
            if not self.database_plugin:
                messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–ü–ª–∞–≥–∏–Ω –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            print("‚úÖ –í—Å–µ –ø–ª–∞–≥–∏–Ω—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ PluginManager")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–≥–∏–Ω—ã:\n{str(e)}")
            self.database_plugin = None
            self.filter_plugin = None
            self.vk_search_plugin = None
            self.token_manager = None
    
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é
        self.create_menu()
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –≤–∫–ª–∞–¥–æ–∫
        self.create_notebook()
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
        self.create_status_bar()
    
    def create_menu(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é"""
        menubar = tk.Menu(self.root)
        self.root.config(menu=menubar)
        
        # –ú–µ–Ω—é –§–∞–π–ª
        file_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–§–∞–π–ª", menu=file_menu)
        file_menu.add_command(label="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", command=self.show_database_interface)
        file_menu.add_separator()
        file_menu.add_command(label="–í—ã—Ö–æ–¥", command=self.root.quit)
        
        # –ú–µ–Ω—é –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
        tools_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", menu=tools_menu)
        tools_menu.add_command(label="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î", command=self.show_database_stats)
        tools_menu.add_command(label="–°—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤", command=self.show_plugin_status)
        tools_menu.add_command(label="–û—á–∏—Å—Ç–∏—Ç—å –ë–î", command=self.clear_database)
        
        # –ú–µ–Ω—é –°–ø—Ä–∞–≤–∫–∞
        help_menu = tk.Menu(menubar, tearoff=0)
        menubar.add_cascade(label="–°–ø—Ä–∞–≤–∫–∞", menu=help_menu)
        help_menu.add_command(label="–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", command=self.show_about)
    
    def create_notebook(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –≤–∫–ª–∞–¥–æ–∫"""
        self.notebook = ttk.Notebook(self.root)
        self.notebook.pack(fill="both", expand=True, padx=5, pady=5)
        
        # –í–∫–ª–∞–¥–∫–∞ –ü–∞—Ä—Å–µ—Ä –í–ö
        self.vk_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.vk_frame, text="–ü–∞—Ä—Å–µ—Ä –í–ö")
        
        # –í–∫–ª–∞–¥–∫–∞ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫
        self.link_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.link_frame, text="–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫")
        
        # –í–∫–ª–∞–¥–∫–∞ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        self.db_frame = ttk.Frame(self.notebook)
        self.notebook.add(self.db_frame, text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        self.init_interfaces()
    
    def init_interfaces(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"""
        try:
            # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–∞—Ä—Å–µ—Ä–∞ –í–ö —Å –ø–µ—Ä–µ–¥–∞—á–µ–π PluginManager
            self.vk_interface = VKParserInterface(self.vk_frame, self.plugin_manager)
            
            # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—è —Å—Å—ã–ª–æ–∫
            self.link_interface = LinkComparatorInterface(self.link_frame)
            
            # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            if self.database_plugin:
                self.db_interface = DatabaseInterface(self.db_frame, self.database_plugin)
            else:
                # –ó–∞–≥–ª—É—à–∫–∞ –µ—Å–ª–∏ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                self.create_db_placeholder()
                
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã: {e}")
    
    def create_db_placeholder(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        placeholder_frame = ttk.Frame(self.db_frame)
        placeholder_frame.pack(fill="both", expand=True, padx=20, pady=20)
        
        ttk.Label(placeholder_frame, text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", 
                 font=("Arial", 16, "bold")).pack(pady=(50, 20))
        
        ttk.Label(placeholder_frame, text="–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞", 
                 font=("Arial", 12)).pack(pady=(0, 30))
        
        ttk.Button(placeholder_frame, text="–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é", 
                  command=self.retry_database_init).pack()
    
    def create_status_bar(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏"""
        self.status_bar = ttk.Frame(self.root)
        self.status_bar.pack(fill="x", side="bottom")
        
        self.status_label = ttk.Label(self.status_bar, text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        self.status_label.pack(side="left", padx=5)
        
        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if self.database_plugin:
            self.db_status = ttk.Label(self.status_bar, text="üü¢ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞", foreground="green")
        else:
            self.db_status = ttk.Label(self.status_bar, text="üî¥ –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞", foreground="red")
        self.db_status.pack(side="right", padx=5)
    
    def bind_events(self):
        """–ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π"""
        self.root.protocol("WM_DELETE_WINDOW", self.on_closing)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
        self.notebook.bind("<<NotebookTabChanged>>", self.on_tab_changed)
    
    def on_closing(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        try:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
            self.save_window_settings()
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã —á–µ—Ä–µ–∑ PluginManager
            if hasattr(self, 'plugin_manager'):
                self.plugin_manager.shutdown_plugins()
            
            self.root.destroy()
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏: {e}")
            self.root.destroy()
    
    def on_tab_changed(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã –≤–∫–ª–∞–¥–∫–∏"""
        current_tab = self.notebook.select()
        tab_id = self.notebook.index(current_tab)
        
        if tab_id == 0:  # –ü–∞—Ä—Å–µ—Ä –í–ö
            self.status_label.config(text="–ü–∞—Ä—Å–µ—Ä –í–ö - –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        elif tab_id == 1:  # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫
            self.status_label.config(text="–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫ - –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        elif tab_id == 2:  # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
            self.status_label.config(text="–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏")
    
    def show_database_interface(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        self.notebook.select(2)  # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ë–î
    
    def show_database_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        if not self.database_plugin:
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return
        
        try:
            tasks = self.database_plugin.get_tasks()
            total_posts = sum(task['total_posts'] for task in tasks)
            total_likes = sum(task['total_likes'] for task in tasks)
            total_SI = sum(task['total_SI'] for task in tasks)
            
            stats_text = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:\n\n"
            stats_text += f"–ó–∞–¥–∞—á: {len(tasks)}\n"
            stats_text += f"–ü–æ—Å—Ç–æ–≤: {total_posts}\n"
            stats_text += f"–õ–∞–π–∫–æ–≤: {total_likes}\n"
            stats_text += f"–û–±—â–∏–π SI: {total_SI}\n"
            
            messagebox.showinfo("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ë–î", stats_text)
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {e}")
    
    def show_plugin_status(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤"""
        if not hasattr(self, 'plugin_manager'):
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "PluginManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return
        
        try:
            plugin_status = self.plugin_manager.get_plugin_status()
            dependencies = self.plugin_manager.validate_plugin_dependencies()
            
            status_text = "–°—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤:\n\n"
            
            for plugin_name, status in plugin_status.items():
                status_text += f"{plugin_name}: {status}\n"
            
            status_text += "\n–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:\n"
            for plugin_name, deps in dependencies.items():
                for dep in deps:
                    status_text += f"{plugin_name}: {dep}\n"
            
            messagebox.showinfo("–°—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤", status_text)
            
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤: {e}")
    
    def clear_database(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
        if not self.database_plugin:
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return
        
        result = messagebox.askyesno(
            "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ",
            "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö?\n"
            "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"
        )
        
        if result:
            try:
                cursor = self.database_plugin.connection.cursor()
                cursor.execute("DELETE FROM posts")
                cursor.execute("DELETE FROM tasks")
                cursor.execute("DELETE FROM task_metadata")
                self.database_plugin.connection.commit()
                
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ë–î
                if hasattr(self, 'db_interface'):
                    self.db_interface.load_tasks()
                
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ë–î: {e}")
    
    def retry_database_init(self):
        """–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        try:
            # –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π PluginManager
            self.plugin_manager.load_plugins()
            self.plugin_manager.initialize_plugins()
            
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã
            self.database_plugin = self.plugin_manager.get_plugin('database')
            self.filter_plugin = self.plugin_manager.get_plugin('filter')
            self.vk_search_plugin = self.plugin_manager.get_plugin('vk_search')
            self.token_manager = self.plugin_manager.get_plugin('token_manager')
            
            if self.database_plugin:
                # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ë–î
                for widget in self.db_frame.winfo_children():
                    widget.destroy()
                
                self.db_interface = DatabaseInterface(self.db_frame, self.database_plugin)
                self.db_status.config(text="üü¢ –ë–î –ø–æ–¥–∫–ª—é—á–µ–Ω–∞", foreground="green")
                
                messagebox.showinfo("–£—Å–ø–µ—Ö", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            else:
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
                
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
    
    def show_about(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
        about_text = """
–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å —Å—Å—ã–ª–æ–∫ –∏ –ü–∞—Ä—Å–µ—Ä –í–ö
–í–µ—Ä—Å–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

–§—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ—Å—Ç–æ–≤ –í–ö –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
‚Ä¢ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV/JSON –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é
‚Ä¢ –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: SQLite
–§–æ—Ä–º–∞—Ç: parser_results.db
–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: PluginManager
        """
        
        messagebox.showinfo("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", about_text)
    
    def load_window_settings(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫–Ω–∞"""
        try:
            import json
            import os
            
            settings_file = "data/window_settings.json"
            if os.path.exists(settings_file):
                with open(settings_file, 'r', encoding='utf-8') as f:
                    settings = json.load(f)
                
                # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                if 'window_width' in settings and 'window_height' in settings:
                    width = settings['window_width']
                    height = settings['window_height']
                    x = settings.get('window_x', 100)
                    y = settings.get('window_y', 100)
                    
                    self.root.geometry(f"{width}x{height}+{x}+{y}")
                    
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫–Ω–∞: {e}")
    
    def save_window_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫–Ω–∞"""
        try:
            import json
            import os
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            os.makedirs("data", exist_ok=True)
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏—é –æ–∫–Ω–∞
            geometry = self.root.geometry()
            # –§–æ—Ä–º–∞—Ç: "widthxheight+x+y"
            parts = geometry.split('+')
            size_parts = parts[0].split('x')
            
            settings = {
                'window_width': int(size_parts[0]),
                'window_height': int(size_parts[1]),
                'window_x': int(parts[1]),
                'window_y': int(parts[2]),
                'last_saved': datetime.now().isoformat()
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
            with open("data/window_settings.json", 'w', encoding='utf-8') as f:
                json.dump(settings, f, indent=2, ensure_ascii=False)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–∫–Ω–∞: {e}") 