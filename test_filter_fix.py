#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è FilterPlugin
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from plugins.filter.filter_plugin import FilterPlugin

def test_filter_plugin():
    """–¢–µ—Å—Ç FilterPlugin"""
    print("üß™ –¢–µ—Å—Ç FilterPlugin")
    
    # –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≥–∏–Ω
    filter_plugin = FilterPlugin()
    filter_plugin.initialize()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_posts = [
        {
            'id': 1,
            'owner_id': 123,
            'text': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º',
            'date': 1640995200
        },
        {
            'id': 2,
            'owner_id': 456,
            'text': '–î—Ä—É–≥–æ–π –ø–æ—Å—Ç –±–µ–∑ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤',
            'date': 1640995200
        },
        {
            'id': 3,
            'owner_id': 789,
            'text': '–ï—â–µ –æ–¥–∏–Ω –ø–æ—Å—Ç —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º',
            'date': 1640995200
        }
    ]
    
    test_keywords = ['–∫–ª—é—á–µ–≤—ã–º']
    
    print(f"üìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"   –ü–æ—Å—Ç–æ–≤: {len(test_posts)}")
    print(f"   –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {len(test_keywords)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    print(f"\nüîç –¢–µ—Å—Ç –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞:")
    for i, post in enumerate(test_posts):
        text = filter_plugin._extract_post_text(post)
        print(f"   {i+1}. {text}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    print(f"\nüîç –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤:")
    for keyword in test_keywords:
        for i, post in enumerate(test_posts):
            text = filter_plugin._extract_post_text(post)
            match = filter_plugin._check_keyword_match(text, keyword, exact_match=False)
            print(f"   –ü–æ—Å—Ç {i+1}, –∫–ª—é—á '{keyword}': {match}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    print(f"\nüîç –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
    try:
        import asyncio
        
        async def test_async():
            filtered = await filter_plugin.filter_posts_comprehensive_parallel(
                test_posts, test_keywords, exact_match=False
            )
            return filtered
        
        filtered = asyncio.run(test_async())
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
        print(f"   –ò—Å—Ö–æ–¥–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {len(test_posts)}")
        print(f"   –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤: {len(filtered)}")
        
        for i, post in enumerate(filtered):
            print(f"   {i+1}. {post.get('text', '')[:50]}...")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
    
    filter_plugin.shutdown()
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    test_filter_plugin() 