#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ PluginManager
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ sys.path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_plugin_manager_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤ —á–µ—Ä–µ–∑ PluginManager"""
    try:
        from src.core.plugin_manager import PluginManager
        
        print("üöÄ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–õ–ê–ì–ò–ù–û–í")
        print("=" * 60)
        
        # –°–æ–∑–¥–∞–µ–º PluginManager
        plugin_manager = PluginManager()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–ª–∞–≥–∏–Ω—ã
        print("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤...")
        plugin_manager.load_plugins()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω—ã
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–æ–≤...")
        plugin_manager.initialize_plugins()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤
        print("\nüìä –°—Ç–∞—Ç—É—Å –ø–ª–∞–≥–∏–Ω–æ–≤:")
        plugin_status = plugin_manager.get_plugin_status()
        for plugin_name, status in plugin_status.items():
            print(f"   {plugin_name}: {status}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        print("\nüîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
        dependencies = plugin_manager.validate_plugin_dependencies()
        for plugin_name, deps in dependencies.items():
            for dep in deps:
                print(f"   {plugin_name}: {dep}")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã
        database_plugin = plugin_manager.get_plugin('database')
        filter_plugin = plugin_manager.get_plugin('filter')
        vk_search_plugin = plugin_manager.get_plugin('vk_search')
        token_manager = plugin_manager.get_plugin('token_manager')
        
        print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –ø–ª–∞–≥–∏–Ω—ã:")
        print(f"   Database: {'‚úÖ' if database_plugin else '‚ùå'}")
        print(f"   Filter: {'‚úÖ' if filter_plugin else '‚ùå'}")
        print(f"   VKSearch: {'‚úÖ' if vk_search_plugin else '‚ùå'}")
        print(f"   TokenManager: {'‚úÖ' if token_manager else '‚ùå'}")
        
        # –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        if database_plugin:
            print("\nüóÑÔ∏è –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
            task_id = database_plugin.create_task(
                task_name="–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤",
                keywords=["—Ç–µ—Å—Ç", "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è"],
                start_date="26.07.2025",
                end_date="26.07.2025"
            )
            print(f"   –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {task_id}")
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
            test_posts = []
            for i in range(5):
                post = {
                    'id': i,
                    'owner_id': -123456,
                    'text': f'–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç {i} –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤',
                    'date': 1640995200 + i * 3600,
                    'likes': {'count': 10 + i},
                    'comments': {'count': 5 + i},
                    'reposts': {'count': 2 + i},
                    'views': {'count': 100 + i * 10},
                    'keywords_matched': ['—Ç–µ—Å—Ç', '–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è']
                }
                test_posts.append(post)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å—Ç—ã
            saved_count = database_plugin.save_posts(task_id, test_posts)
            print(f"   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {saved_count}")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            stats = database_plugin.get_task_statistics(task_id)
            print(f"   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats['total_posts']} –ø–æ—Å—Ç–æ–≤, {stats['total_likes']} –ª–∞–π–∫–æ–≤")
            
            # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            if filter_plugin:
                print("\nüîç –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
                
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ –ë–î
                posts = database_plugin.get_task_posts(task_id)
                print(f"   –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ –∏–∑ –ë–î: {len(posts)}")
                
                # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
                if hasattr(filter_plugin, 'filter_posts_by_keywords_fast'):
                    filtered_posts = filter_plugin.filter_posts_by_keywords_fast(
                        posts, ["—Ç–µ—Å—Ç"], exact_match=False
                    )
                    print(f"   –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(filtered_posts)}")
                else:
                    print("   ‚ö†Ô∏è –ú–µ—Ç–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
            # –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞
            print("\nüíæ –¢–µ—Å—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞:")
            timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
            csv_path = f"data/results/test_integration_{timestamp}.csv"
            
            if database_plugin.export_task_to_csv(task_id, csv_path):
                print(f"   ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω: {csv_path}")
            else:
                print("   ‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞")
        
        # –¢–µ—Å—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
        if vk_search_plugin and token_manager:
            print("\nüîé –¢–µ—Å—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞:")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤
            tokens = token_manager.list_vk_tokens()
            print(f"   –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {len(tokens)}")
            
            if tokens:
                print("   ‚úÖ –¢–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞")
            else:
                print("   ‚ö†Ô∏è –¢–æ–∫–µ–Ω—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
        print("\nüîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–ª–∞–≥–∏–Ω–æ–≤...")
        plugin_manager.shutdown_plugins()
        
        print("\n‚úÖ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–ª–∞–≥–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        return {
            'database_plugin': database_plugin is not None,
            'filter_plugin': filter_plugin is not None,
            'vk_search_plugin': vk_search_plugin is not None,
            'token_manager': token_manager is not None,
            'total_plugins': len(plugin_status),
            'task_id': task_id if database_plugin else None
        }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return None

def test_gui_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å GUI"""
    try:
        print("\nüñ•Ô∏è –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° GUI")
        print("=" * 60)
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        from src.gui.main_interface import MainInterface
        import tkinter as tk
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ
        root = tk.Tk()
        root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        app = MainInterface(root)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–æ–≤
        print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞–≥–∏–Ω–æ–≤ –≤ GUI:")
        print(f"   Database: {'‚úÖ' if app.database_plugin else '‚ùå'}")
        print(f"   Filter: {'‚úÖ' if app.filter_plugin else '‚ùå'}")
        print(f"   VKSearch: {'‚úÖ' if app.vk_search_plugin else '‚ùå'}")
        print(f"   TokenManager: {'‚úÖ' if app.token_manager else '‚ùå'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
        print("\nüñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤:")
        print(f"   VK Interface: {'‚úÖ' if hasattr(app, 'vk_interface') else '‚ùå'}")
        print(f"   Link Interface: {'‚úÖ' if hasattr(app, 'link_interface') else '‚ùå'}")
        print(f"   DB Interface: {'‚úÖ' if hasattr(app, 'db_interface') else '‚ùå'}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        root.destroy()
        
        print("‚úÖ –¢–µ—Å—Ç GUI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ GUI: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–õ–ê–ì–ò–ù–û–í –ß–ï–†–ï–ó PLUGINMANAGER")
    print("=" * 80)
    
    # –¢–µ—Å—Ç PluginManager
    results = test_plugin_manager_integration()
    
    if results:
        print(f"\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print(f"   Database Plugin: {'‚úÖ' if results['database_plugin'] else '‚ùå'}")
        print(f"   Filter Plugin: {'‚úÖ' if results['filter_plugin'] else '‚ùå'}")
        print(f"   VKSearch Plugin: {'‚úÖ' if results['vk_search_plugin'] else '‚ùå'}")
        print(f"   TokenManager Plugin: {'‚úÖ' if results['token_manager'] else '‚ùå'}")
        print(f"   –í—Å–µ–≥–æ –ø–ª–∞–≥–∏–Ω–æ–≤: {results['total_plugins']}")
        if results['task_id']:
            print(f"   –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞: {results['task_id']}")
    
    # –¢–µ—Å—Ç GUI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    gui_success = test_gui_integration()
    
    print("\n" + "=" * 80)
    if results and gui_success:
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
    
    print("=" * 80)

if __name__ == "__main__":
    main() 