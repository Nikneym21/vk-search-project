#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ VKSearchPlugin
"""

import asyncio
import time
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞–ø—Ä—è–º—É—é
from src.core.plugin_manager import PluginManager

async def test_performance():
    """–¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    print("üöÄ –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ VKSearchPlugin")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PluginManager
    pm = PluginManager()
    pm.load_plugins()
    pm.initialize_plugins()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    keywords = ['–Ω–æ–≤–æ—Å—Ç–∏', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', 'python', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞']
    start_date = '24.07.2025'
    end_date = '24.07.2025'
    
    print(f"üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–∞:")
    print(f"   –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords}")
    print(f"   –ü–µ—Ä–∏–æ–¥: {start_date} - {end_date}")
    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {len(keywords)}")
    print()
    
    # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è
    start_time = time.time()
    
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
        results = await pm.coordinate_search_and_filter(
            keywords, start_date, end_date, exact_match=False
        )
        
        # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        execution_time = time.time() - start_time
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞:")
        print(f"   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time:.2f} —Å–µ–∫—É–Ω–¥")
        print(f"   –ü–æ–ª—É—á–µ–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(results)}")
        print(f"   –°–∫–æ—Ä–æ—Å—Ç—å: {len(results) / execution_time:.1f} –ø–æ—Å—Ç–æ–≤/—Å–µ–∫")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É VKSearchPlugin
        vk_plugin = pm.get_plugin('vk_search')
        if vk_plugin:
            stats = vk_plugin.get_statistics()
            print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ VKSearchPlugin:")
            print(f"   –ó–∞–ø—Ä–æ—Å–æ–≤ –∫ API: {stats['requests_made']}")
            print(f"   Rate limit hits: {stats['performance_metrics']['rate_limit_hits']}")
            print(f"   –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {stats['performance_metrics']['average_response_time']:.3f} —Å–µ–∫")
            print(f"   –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {stats['performance_metrics']['cache_size']}")
            print(f"   –ó–∞–ø—Ä–æ—Å–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É: {stats['performance_metrics']['requests_per_second']:.1f}")
            print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤: {stats['performance_metrics']['token_usage']}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É FilterPlugin
        filter_plugin = pm.get_plugin('filter')
        if filter_plugin:
            print(f"\nüîç –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ FilterPlugin:")
            print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–æ—Å—Ç–æ–≤: {len(results)}")
        
        print(f"\nüéØ –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
        if execution_time < 30:
            print("   ‚ö° –û—Ç–ª–∏—á–Ω–æ! –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞")
        elif execution_time < 60:
            print("   ‚úÖ –•–æ—Ä–æ—à–æ! –ü—Ä–∏–µ–º–ª–µ–º–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å")
        else:
            print("   ‚ö†Ô∏è  –ú–µ–¥–ª–µ–Ω–Ω–æ! –¢—Ä–µ–±—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏")
            
        if len(results) > 100:
            print("   üìà –í—ã—Å–æ–∫–∞—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å")
        elif len(results) > 50:
            print("   ‚úÖ –°—Ä–µ–¥–Ω—è—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å")
        else:
            print("   ‚ö†Ô∏è  –ù–∏–∑–∫–∞—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
        execution_time = time.time() - start_time
        print(f"   –í—Ä–µ–º—è –¥–æ –æ—à–∏–±–∫–∏: {execution_time:.2f} —Å–µ–∫—É–Ω–¥")
    
    finally:
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
        pm.shutdown_plugins()

async def test_comparison():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–æ –∏ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    print("\n" + "=" * 60)
    print("üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    test_cases = [
        {
            "name": "–ú–∞–ª–æ –∑–∞–ø—Ä–æ—Å–æ–≤",
            "keywords": ["—Ç–µ—Å—Ç"],
            "expected_time": 10
        },
        {
            "name": "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ",
            "keywords": ["–Ω–æ–≤–æ—Å—Ç–∏", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ"],
            "expected_time": 20
        },
        {
            "name": "–ú–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤",
            "keywords": ["–Ω–æ–≤–æ—Å—Ç–∏", "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "python", "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "web", "mobile"],
            "expected_time": 40
        }
    ]
    
    for test_case in test_cases:
        print(f"\nüß™ {test_case['name']}:")
        print(f"   –ó–∞–ø—Ä–æ—Å–æ–≤: {len(test_case['keywords'])}")
        
        start_time = time.time()
        
        try:
            pm = PluginManager()
            pm.load_plugins()
            pm.initialize_plugins()
            
            results = await pm.coordinate_search_and_filter(
                test_case['keywords'], '24.07.2025', '24.07.2025', exact_match=False
            )
            
            execution_time = time.time() - start_time
            efficiency = len(results) / execution_time if execution_time > 0 else 0
            
            print(f"   ‚è±Ô∏è  –í—Ä–µ–º—è: {execution_time:.2f} —Å–µ–∫")
            print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
            print(f"   üöÄ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {efficiency:.1f} –ø–æ—Å—Ç–æ–≤/—Å–µ–∫")
            
            if execution_time < test_case['expected_time']:
                print(f"   ‚úÖ –ë—ã—Å—Ç—Ä–µ–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ ({test_case['expected_time']} —Å–µ–∫)")
            else:
                print(f"   ‚ö†Ô∏è  –ú–µ–¥–ª–µ–Ω–Ω–µ–µ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ ({test_case['expected_time']} —Å–µ–∫)")
                
            pm.shutdown_plugins()
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üéØ –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ VKSearchPlugin")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    asyncio.run(test_performance())
    asyncio.run(test_comparison())
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!") 